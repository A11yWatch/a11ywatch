version: "3.0"
services:
  api:
    container_name: api
    env_file: ./api/.env
    build:
      context: ./api
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./api/src:/usr/src/app/src
      - ./api/__tests__:/usr/src/app/__tests__
      - ./api/.env:/usr/src/app/.env
    networks:
      - back-net
      - front-net
    ports:
      - "8080:8080"
    restart: on-failure

  angelica:
    container_name: angelica
    env_file: ./angelica/.env
    build:
      context: ./angelica
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./angelica/src:/usr/src/app/src
      - ./angelica/__tests__:/usr/src/app/__tests__
      - ./angelica/.env:/usr/src/app/.env
    networks:
      - back-net
    ports:
      - "8040:8040"
    restart: on-failure

  mav:
    container_name: mav
    env_file: ./mav/.env
    build:
      context: ./mav
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./mav/src:/usr/src/app/src
      - ./mav/__tests__:/usr/src/app/__tests__
      - ./mav/.env:/usr/src/app/.env
    networks:
      - back-net
    ports:
      - "8020:8020"
    restart: on-failure

  logger:
    container_name: logger
    env_file: ./logger/.env
    build:
      context: ./logger
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./logger/src:/usr/src/app/src
      - ./logger/.env:/usr/src/app/.env
    networks:
      - back-net
    ports:
      - "8022:8022"
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: 0.25
          memory: 256M
        reservations:
          memory: 128M

  web:
    container_name: web
    build:
      context: ./web
      dockerfile: ./Dockerfile.dev
    env_file:
      - ./web/.env
    volumes:
      - ./web/src:/usr/src/app/src'
      - ./web/server:/usr/src/app/server
      - ./web/public:/usr/src/app/public
      - ./web/next.config.js:/usr/src/app/next.config.js
      - ./web/tsconfig.json:/usr/src/app/tsconfig.json
      - ./web/.env:/usr/src/app/.env
    networks:
      - front-net
    ports:
      - "3000:3000"

  example-site:
    container_name: example-site
    env_file: ./example-site/.env
    build:
      context: ./example-site
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./example-site/:/usr/src/app/
    networks:
      - front-net
      - back-net
    ports:
      - "8050:8050"
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: 0.25
          memory: 256M
        reservations:
          memory: 128M

  cdn-server:
    env_file: ./cdn-server/.env
    container_name: cdn-server
    build:
      context: ./cdn-server
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./cdn-server/src:/usr/src/app/src
      - ./cdn-server/.env:/usr/src/app/.env
    networks:
      - back-net
      - front-net
    ports:
      - "8090:8090"
    restart: on-failure

  iframe-server:
    env_file: ./iframe-server/.env
    container_name: iframe-server
    build:
      context: ./iframe-server
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./iframe-server/src:/usr/src/app/src
      - ./iframe-server/.env:/usr/src/app/.env
    networks:
      - front-net
    ports:
      - "8010:8010"
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: 0.25
          memory: 256M
        reservations:
          memory: 128M

  watcher:
    container_name: watcher
    env_file: ./watcher/.env
    build:
      context: ./watcher
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./watcher/src:/usr/src/app/src
      - ./watcher/scripts:/usr/src/app/scripts
      - ./watcher/tests:/usr/src/app/tests
      - ./watcher/.env:/usr/src/app/.env
    networks:
      - back-net
    ports:
      - "8000:8000"
    restart: on-failure

  mongodb:
    container_name: mongodb
    networks:
      - back-net
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb:/data/db
    environment:
      - MONGO_INITDB_DATABASE=${DB_NAME:-a11ywatch}

networks:
  front-net:
  back-net:
volumes:
  mongodb:
  api:
  angelica:
  watcher:
  cdn-server:
  web:
  iframe-server:
  logger:
  example-site:
